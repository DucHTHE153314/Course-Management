@using CourseManagementWebClientWebClient.Data;
@model BussinessObject.DTOs.TopicDTO

@{
    ViewData["Title"] = "Details";
    List<String> roles = (List<String>)ViewData["UserRoles"];
}

<h1>Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StudentTask)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StudentTask)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.teachingType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.teachingType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsActive)
        </dd>
    </dl>
    <hr />
</div>
<div>
    @if (roles != null && (roles.Contains(Role.SUPERADMIN.ToString())
                           || roles.Contains(Role.TEACHER.ToString())))
                            {
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
                            }
    <a asp-controller="Course" asp-action="Details" asp-route-id="@Model.CourseId">Back to List</a>
</div>
